{"version":3,"sources":["components/header/Header.tsx","pages/About.tsx","pages/Resources.tsx","pages/Contact.tsx","components/accordion/Accordion.tsx","components/detailedinfo/DetailedInfo.tsx","components/country/Country.tsx","features/countries/Countries.tsx","pages/Main.tsx","components/mainpage/MainPage.tsx","App.tsx","features/counter/counterAPI.ts","features/counter/counterSlice.ts","app/store.ts","serviceWorker.ts","index.tsx"],"names":["Header","className","to","activeClassName","Main","Accordion","props","useState","expanded","setExpanded","classNames","children","onClick","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","DetailedInfo","date","source","summary","URL","toUpperCase","href","target","rel","Country","prop","name","flagUrl","counter","detailedInfo","src","alt","map","info","title","tempData","countries","Countries","country","Date","now","toUTCString","MainPage","path","App","fetchCount","amount","Promise","resolve","setTimeout","data","incrementAsync","createAsyncThunk","a","response","counterSlice","createSlice","initialState","value","status","reducers","increment","state","decrement","incrementByAmount","action","payload","extraReducers","builder","addCase","pending","fulfilled","actions","store","configureStore","reducer","counterReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b2d0c1d0.chunk.js","sourcesContent":["import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport './Header.css';\n\nexport function Header() {\n  return (\n    <div className=\"header bg-red-600\">\n      <div className=\"logo text-2xl font-bold\"><NavLink to=\"/\">aggmonitor.io</NavLink></div>\n      <div className=\"menuItem text-lg\"><NavLink to=\"/about\" activeClassName=\"activeLink\">ABOUT</NavLink></div>\n      <div className=\"menuItem text-lg\"><NavLink to=\"/resources\" activeClassName=\"activeLink\">RESOURCES</NavLink></div>\n      <div className=\"menuItem text-lg\"><NavLink to=\"/contact\" activeClassName=\"activeLink\">CONTACT</NavLink></div>\n    </div>\n  )\n}","import React from 'react';\n\nexport default function Main () {\n  return (\n    <div>\n      About\n      <div>\n        Don't look here yet. :D\n      </div>\n    </div>\n  )\n}\n","import React from 'react';\n\nexport default function Main () {\n  return (\n    <div>\n      Resources\n      <div>\n        And here as well!\n      </div>\n    </div>\n  )\n}\n","import React from 'react';\n\nexport default function Main () {\n  return (\n    <div>\n      Contact\n      <div>Oh yeah and don't look here yet either :grin:</div>\n    </div>\n  )\n}\n","import React, {useState} from 'react';\nimport classNames from 'classnames';\n\ninterface AccordionProps {\n  children: JSX.Element;\n}\n\nexport function Accordion(props: AccordionProps) {\n  const [expanded, setExpanded] = useState(false);\n\n  return (\n    <div className=\"transition-all duration-700\">\n      <div className={classNames('relative', 'overflow-hidden', {'max-h-0': !expanded}, {'max-h-300': expanded}, {'mt-4': expanded})}>\n        {props.children}\n      </div>\n      <button onClick={() => setExpanded(!expanded)} className=\"text-red-500 text-sm\">\n        <div className=\"flex place-content-center\">\n          <div>{!expanded ? 'VIEW MORE INFO' : 'VIEW LESS INFO'}</div>\n          <div className=\"text-red-500 ml-2\">\n            {!expanded ? \n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n              </svg>\n            :\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 15l7-7 7 7\" />\n            </svg>}\n          </div>  \n        </div>        \n      </button>\n    </div>\n  )\n}\n","import React from \"react\";\n\ninterface DetailedInfoProps {\n  date: string;\n  source: string;\n  title: string;\n  summary: string;\n  URL: string;\n}\n\nexport default function DetailedInfo (props: DetailedInfoProps ) {\n  const { date, source, summary, URL } = props;\n  return (\n    <div className=\"text-left mb-3\">\n      <div className=\"text-xs\">\n        {date} VIA {source.toUpperCase()}\n      </div>\n      <div className=\"text-sm\">\n        {summary} <a href={URL} target=\"_blank\" rel=\"noopener noreferrer\"><span className=\"text-xs text-red-500\">VIEW SOURCE</span></a>\n      </div>\n    </div>\n  )\n}","\nimport React from \"react\";\nimport { Accordion } from \"../accordion/Accordion\";\nimport DetailedInfo from \"../detailedinfo/DetailedInfo\";\nimport \"./Country.css\";\ninterface CountryProp {\n  name: string;\n  flagUrl: string;\n  counter: number;\n  detailedInfo?: {\n    date: string;\n    source: string;\n    title: string;\n    summary: string;\n    URL: string;\n  }[]\n}\n\nexport function Country(prop: CountryProp) {\n  const { name, flagUrl, counter, detailedInfo} = prop;\n  return (\n    <div>\n      <div className=\"h-36\">\n        <img src={flagUrl} alt={name} className=\"mx-auto h-36\"/>\n      </div>\n      <h4 className=\"text-sm font-bold\">\n        {name}\n      </h4>\n      <section className=\"mt-16\">\n        <div className=\"text-5xl font-bold m-2\">\n          {counter}\n        </div>\n        <div className=\"text-lg font-bold\">\n          Days aggression free\n        </div>\n      </section>\n      <div>\n        <Accordion>\n          <>\n          {detailedInfo && detailedInfo.map((info) => {\n            const {date, source, title, summary, URL} = info;\n            return (\n              <DetailedInfo\n                date={date}\n                source={source}\n                title={title}\n                summary={summary}\n                URL={URL}\n              />)\n          })}\n          </>\n        </Accordion>\n        \n      </div>\n    </div>\n  )\n}","import React from \"react\";\nimport { Country } from \"../../components/country/Country\";\n\nconst tempData = {\n  countries: [\n    {\n      name: 'United States',\n      flagUrl: './images/us_flag.svg',\n      counter: 4,\n      detailedInfo: [\n        {\n          date: '2021-11-15',\n          source: 'The New York Times',\n          title: '',\n          summary: 'How the U.S. Hid an Airstrike That Killed Dozens of Civilians in Syria',\n          URL: 'https://www.nytimes.com/2021/11/13/us/us-airstrikes-civilian-deaths.html',\n        },\n        {\n          date: '2021-11-18',\n          source: 'The New York Times',\n          title: '',\n          summary: 'Times Investigation: In U.S. Drone Strike, Evidence Suggests No ISIS Bomb',\n          URL: 'https://www.nytimes.com/2021/09/10/world/asia/us-air-strike-drone-kabul-afghanistan-isis.html',\n        },\n        {\n          date: '2021-06-28',\n          source: 'AlJazeera',\n          title: '',\n          summary: 'US carries out air raids on Iran-backed militias in Syria, Iraq',\n          URL: 'https://www.aljazeera.com/news/2021/6/28/us-carries-out-air-raids-on-iran-backed-groups-in-syria-iraq',\n        }\n      ]\n    },\n    {\n      name: 'China',\n      flagUrl: './images/china_flag.svg',\n      counter: 23,\n      detailedInfo: [\n        {\n          date: '2021-11-11',\n          source: 'The Economist',\n          title: '',\n          summary: 'How the game of Go explains China’s aggression towards India',\n          URL: 'https://www.economist.com/asia/2021/11/11/how-the-game-of-go-explains-chinas-aggression-towards-india',\n        },\n        {\n          date: '2021-11-01',\n          source: 'The Atlantic',\n          title: '',\n          summary: 'What Will Drive China to War?',\n          URL: 'https://www.theatlantic.com/ideas/archive/2021/11/us-china-war/620571/',\n        },\n        {\n          date: '2021-10-08',\n          source: 'Washington Post',\n          title: '',\n          summary: 'China warns United States over news reports that American forces are stationed in Taiwan.',\n          URL: 'https://www.washingtonpost.com/world/asia_pacific/taiwan-china-us-marines/2021/10/08/20378918-27d8-11ec-8739-5cb6aba30a30_story.html',\n        }\n      ]\n    }\n  ]\n}\n\nexport function Countries() {\n  return (\n    <div className=\"grid grid-cols-2 gap-12\">\n      {tempData.countries.map((country) => {\n        const {name, flagUrl, counter, detailedInfo } = country;\n        return <Country \n          name={name}\n          flagUrl={flagUrl}\n          counter={counter}\n          detailedInfo={detailedInfo}\n        />\n      })}\n    </div>\n  )\n}","import React from 'react';\nimport { Countries } from '../features/countries/Countries';\n\nexport default function Main () {\n  return (\n    <div className=\"\">\n      <div className=\"text-left ml-24 mt-14 mb-14\">\n        <h1 className=\"text-5xl font-bold mb-3\">\n          Aggression Monitor\n          <span className=\"text-sm font-normal ml-8\">Last updated {new Date(Date.now()).toUTCString()}</span>\n        </h1>\n        <sub className=\"text-lg\">Comparing country aggression by date</sub>\n      </div>\n      <div className=\"m-24\">\n        <Countries />\n      </div>\n    </div>\n  )\n}\n","import React from \"react\";\nimport { Route, Switch } from \"react-router\";\nimport { Header } from \"../header/Header\";\nimport About from \"../../pages/About\";\nimport Resources from \"../../pages/Resources\";\nimport Contact from \"../../pages/Contact\";\nimport Main from \"../../pages/Main\";\nimport './MainPage.css';\n\nexport function MainPage() {\n  return (\n    <div className=\"main\">\n      <Header />\n      <Switch>\n        <Route path=\"/about\">\n          <About />\n        </Route>\n        <Route path=\"/resources\">\n          <Resources />\n        </Route>\n        <Route path=\"/contact\">\n          <Contact />\n        </Route>\n        <Route path=\"/\">\n          <Main />\n        </Route>\n      </Switch>\n    </div>\n  )\n}","import React from 'react';\nimport './App.css';\nimport { MainPage } from './components/mainpage/MainPage';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <MainPage />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// A mock function to mimic making an async request for data\nexport function fetchCount(amount = 1) {\n  return new Promise<{ data: number }>((resolve) =>\n    setTimeout(() => resolve({ data: amount }), 500)\n  );\n}\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { RootState, AppThunk } from '../../app/store';\nimport { fetchCount } from './counterAPI';\n\nexport interface CounterState {\n  value: number;\n  status: 'idle' | 'loading' | 'failed';\n}\n\nconst initialState: CounterState = {\n  value: 0,\n  status: 'idle',\n};\n\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched. Thunks are\n// typically used to make async requests.\nexport const incrementAsync = createAsyncThunk(\n  'counter/fetchCount',\n  async (amount: number) => {\n    const response = await fetchCount(amount);\n    // The value we return becomes the `fulfilled` action payload\n    return response.data;\n  }\n);\n\nexport const counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    increment: (state) => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.value += 1;\n    },\n    decrement: (state) => {\n      state.value -= 1;\n    },\n    // Use the PayloadAction type to declare the contents of `action.payload`\n    incrementByAmount: (state, action: PayloadAction<number>) => {\n      state.value += action.payload;\n    },\n  },\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\n  // including actions generated by createAsyncThunk or in other slices.\n  extraReducers: (builder) => {\n    builder\n      .addCase(incrementAsync.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(incrementAsync.fulfilled, (state, action) => {\n        state.status = 'idle';\n        state.value += action.payload;\n      });\n  },\n});\n\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\nexport const selectCount = (state: RootState) => state.counter.value;\n\n// We can also write thunks by hand, which may contain both sync and async logic.\n// Here's an example of conditionally dispatching actions based on current state.\nexport const incrementIfOdd = (amount: number): AppThunk => (\n  dispatch,\n  getState\n) => {\n  const currentValue = selectCount(getState());\n  if (currentValue % 2 === 1) {\n    dispatch(incrementByAmount(amount));\n  }\n};\n\nexport default counterSlice.reducer;\n","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\nimport counterReducer from '../features/counter/counterSlice';\n\nexport const store = configureStore({\n  reducer: {\n    counter: counterReducer,\n  },\n});\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from \"react-router-dom\";\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}